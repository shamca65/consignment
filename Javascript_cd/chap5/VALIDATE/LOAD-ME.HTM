<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.0b2 (Win95; I) [Netscape]">
   <TITLE>JavaScript Example</TITLE>
<SCRIPT>

        // "Internal" function to return the decoded value of a cookie

    //

    function getCookieVal (offset) {

      var endstr = document.cookie.indexOf (";", offset);

      if (endstr == -1)

        endstr = document.cookie.length;

      return unescape(document.cookie.substring(offset, endstr));

    }



    //

    //  Function to return the value of the cookie specified by "name".

    //    name - String object containing the cookie name.

    //    returns - String object containing the cookie value, or null if

    //      the cookie does not exist.

    //

    function GetCookie (name) {

      var arg = name + "=";

      var alen = arg.length;

      var clen = document.cookie.length;

      var i = 0;

      while (i < clen) {

        var j = i + alen;

        if (document.cookie.substring(i, j) == arg)

          return getCookieVal (j);

        i = document.cookie.indexOf(" ", i) + 1;

        if (i == 0) break; 

      }

      return null;

    }



    //

    //  Function to create or update a cookie.

    //    name - String object object containing the cookie name.

    //    value - String object containing the cookie value.  May contain

    //      any valid string characters.

    //    [expires] - Date object containing the expiration data of the cookie.  If

    //      omitted or null, expires the cookie at the end of the current session.

    //    [path] - String object indicating the path for which the cookie is valid.

    //      If omitted or null, uses the path of the calling document.

    //    [domain] - String object indicating the domain for which the cookie is

    //      valid.  If omitted or null, uses the domain of the calling document.

    //    [secure] - Boolean (true/false) value indicating whether cookie transmission

    //      requires a secure channel (HTTPS).  

    //

    //  The first two parameters are required.  The others, if supplied, must

    //  be passed in the order listed above.  To omit an unused optional field,

    //  use null as a place holder.  For example, to call SetCookie using name,

    //  value and path, you would code:

    //

    //      SetCookie ("myCookieName", "myCookieValue", null, "/");

    //

    //  Note that trailing omitted parameters do not require a placeholder.

    //

    //  To set a secure cookie for path "/myPath", that expires after the

    //  current session, you might code:

    //

    //      SetCookie (myCookieVar, cookieValueVar, null, "/myPath", null, true);

    //

    function SetCookie (name, value) {

      var argv = SetCookie.arguments;


      var argc = SetCookie.arguments.length;


      var expires = (argc > 2) ? argv[2] : null;

      var path = (argc > 3) ? argv[3] : null;

      var domain = (argc > 4) ? argv[4] : null;

      var secure = (argc > 5) ? argv[5] : false;

      document.cookie = name + "=" + escape (value) +

        ((expires == null) ? "" : ("; expires=" + expires.toGMTString())) +

        ((path == null) ? "" : ("; path=" + path)) +

        ((domain == null) ? "" : ("; domain=" + domain)) +

        ((secure == true) ? "; secure" : "");

    }



    //  Function to delete a cookie. (Sets expiration date to current date/time)

    //    name - String object containing the cookie name

    //

    function DeleteCookie (name) {

      var exp = new Date();

      exp.setTime (exp.getTime() - 1);  // This cookie is history

      var cval = GetCookie (name);

      document.cookie = name + "=" + cval + "; expires=" + exp.toGMTString();

    }



</SCRIPT>
</HEAD>
<BODY>
<CENTER></CENTER>
<CENTER>Fill your name in the space provided.&nbsp;</CENTER>
<CENTER>Press &quot;Submit Request&quot;&nbsp;</CENTER>
<CENTER>Press &quot;Enter&quot;&nbsp;<FORM NAME="demoForm" onSubmit="

    if(demoForm.UserName.value.length != 0) {

        var expdate = new Date (); 

        expdate.setTime(expdate.getTime() + (24 * 60 * 60 * 1000)); 

        SetCookie('DemoName', demoForm.UserName.value, expdate); 

        alert('Hey ' + demoForm.UserName.value + ', how is it going? Now all you have to do is click Enter');

        return false;

    } else {

        alert('You left the Name field blank.');

        return false;

    }"></CENTER>
<CENTER></CENTER>
<CENTER><FONT SIZE=+1>Enter Your Name Here To Request Access :&nbsp;</FONT><INPUT TYPE="text" NAME="UserName" SIZE=40></CENTER>
<CENTER></CENTER>
<CENTER><INPUT TYPE="submit" VALUE="Submit Request"><INPUT TYPE="button" VALUE="Enter"

    onClick="

        if(GetCookie('DemoName') == null)

            alert('Did you submit request?')

        else 

            window.open('open.htm', '_top')"></FORM></CENTER>


</BODY>
</HTML>
